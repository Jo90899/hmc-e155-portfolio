[
  {
    "objectID": "posts/lab2-blog.html",
    "href": "posts/lab2-blog.html",
    "title": "Lab 2 Reflection",
    "section": "",
    "text": "For E155 Lab 2, I was tasked with building on my skills from Lab 1, as well as learning how to use time multiplexing to my advantage. While putting the pieces of the software together, I noticed that I spend a lot of time redoing or reorganizing my setup due to a lack of pre-implementation mapping. Taking a step back, it seems the best way to move forward with labs like these is to spend some time in front of a whiteboard and just throw my thoughts down. This could definitely help me find potential errors or easier solutions before I implement.\nUsing skills from lectures, like writing out input-output tables and drawing FSM State Transition Diagrams/Tables has proven useful for this lab. The lab definitely seems to get easier when I draw things out like this. Additionally, time multiplexing seems like a great way to save “space” with our MCU and FPGA. This is definitely something I want to explore and maybe include in my project for E155."
  },
  {
    "objectID": "posts/initial-goals.html",
    "href": "posts/initial-goals.html",
    "title": "My Personal E155 Goals",
    "section": "",
    "text": "E155 (also known as “MicroPs”) is an upper-division elective at Harvey Mudd intended to expand our knowledge of digital design (FPGAs and microcontrollers) in order to allow us to build our own embedded systems. This class is very hands-on and lab-oriented: as such, much of the learning in this class comes from putting our knowledge to practice and learning from our (many) mistakes.\nAs for my learning objectives, it is not as simple as saying I want to learn more about digital design. In order to do this, I have to be willing to try and fail so that I can learn from my mistakes. I hope that through this class, I gain the confidence to try my best and accept that failure will happen. I hope to learn that failure is not a step backward, but instead a new clue to finding my way forward."
  },
  {
    "objectID": "labs/lab7/lab7.html",
    "href": "labs/lab7/lab7.html",
    "title": "E155 Lab 7",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab7/lab7.html#the-advanced-encryption-standard",
    "href": "labs/lab7/lab7.html#the-advanced-encryption-standard",
    "title": "E155 Lab 7",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab5/lab5.html",
    "href": "labs/lab5/lab5.html",
    "title": "E155 Lab 5",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab5/lab5.html#interrupts",
    "href": "labs/lab5/lab5.html#interrupts",
    "title": "E155 Lab 5",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab3/lab3.html",
    "href": "labs/lab3/lab3.html",
    "title": "E155 Lab 3",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab3/lab3.html#keypad-scanner",
    "href": "labs/lab3/lab3.html#keypad-scanner",
    "title": "E155 Lab 3",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab1/lab1.html",
    "href": "labs/lab1/lab1.html",
    "title": "E155 Lab 1: FPGA and MCU Setup and Testing",
    "section": "",
    "text": "In this lab, the goal was to set up and test our development board, FPGA, and MCU, as described in the Lab 1 Instructions. In addition to running these tests, we were tasked with creating our own program to run on the FPGA that would light up a seven-segment LED display. This display would be able to show the single-digit hexadecimal digits 0-f and it would be controlled by 4 DIP switches mounted on the development board."
  },
  {
    "objectID": "labs/lab1/lab1.html#module-design",
    "href": "labs/lab1/lab1.html#module-design",
    "title": "E155 Lab 1: FPGA and MCU Setup and Testing",
    "section": "Module Design",
    "text": "Module Design\nTo begin solving this problem, I drew out the top-level design for my SystemVerilog, shown below. In this design, I included a module for the LED Control and a module for the Seven-Seg display, as well as a clk generated using HSOSC as instructed within the Lab1 top-view but outside the two modules.\n\n\n\n\nTop-level design of modules\n\n\n\nFigure 2: Top-level design sketch of the seven_seg and led_control modules used inside the lab1_xx (or lab1_ja) file.\nFrom here, I was able to write my SystemVerilog in Radiant. See that code here."
  },
  {
    "objectID": "labs/lab1/lab1.html#simulation-and-results",
    "href": "labs/lab1/lab1.html#simulation-and-results",
    "title": "E155 Lab 1: FPGA and MCU Setup and Testing",
    "section": "Simulation and Results",
    "text": "Simulation and Results\nAfter completing the .sv files for both the led_control and seven_seg as well as the top level file, I ran a simulation on ModelSim to test my outputs. I forced each input 0000-1111 and received the correct outputs, as can be seen in the image below.\n\n Figure 3: Screenshot of the ModelSim wave view displaying successful simulation for all potential inputs.\n\nThe results indicate that the LEDs on the development board function properly and each input for the seven-segment display contains a correct (and unique) combination displaying the hexadecimal digit."
  },
  {
    "objectID": "labs/lab1/lab1.html#journey-to-hardware",
    "href": "labs/lab1/lab1.html#journey-to-hardware",
    "title": "E155 Lab 1: FPGA and MCU Setup and Testing",
    "section": "Journey to Hardware",
    "text": "Journey to Hardware\nAfter successfully simulating the Lab1 modules, I needed to then put the seven-segment display on a breadboard to physically light it. To do this, I first had to consider the LED power draw and how much current would flow through each cathode, so as to make sure the segments all lit up at the same brightness level. Each cathode on the display needed to be connected to the breadboard adapter (and ultimately ground), so we had to include a resistance in this connection. In addition, because of Kirchhoff’s Current Law, the resistors all must be the same because current will flow through the path of least resistance (same resistance will result in even flow). Looking at the datasheet, I found that the voltage required to power a segment was 2.1 V and the ideal current was 20 mA So:\n\\[\nR=\\frac{V_i-V_f}{I}=\\frac{3.3-2.1}{0.02}=60 \\textnormal{ Ohms}\n\\]\nGiven this, I chose a resistor close to 60 Ohms (68 Ohms). I then completed the circuit and programmed my FPGA, which then gave me the correct outputs on the display, modeled with two examples below.\n\n Figure 4: Image of the seven-segment display when given s[3:0]=0100 as an input and showing “4” as the output.\n\n\n Figure 5: Image of the seven-segment display when given s[3:0]=1010 as an input and showing “A” as the output."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "E155 Blog",
    "section": "",
    "text": "Lab 2 Reflection\n\n\n\n\n\nMy experience with Lab 2 so far\n\n\n\n\n\nSep 13, 2024\n\n\nJoseph Abdelmalek\n\n\n\n\n\n\n\n\n\n\n\n\nLab 1 Reflection\n\n\n\n\n\nReflecting on my experience with Lab 1 until now\n\n\n\n\n\nSep 6, 2024\n\n\nJoseph Abdelmalek\n\n\n\n\n\n\n\n\n\n\n\n\nHello Quarto\n\n\n\n\n\nWelcome to my Quarto portfolio E155!\n\n\n\n\n\nAug 30, 2024\n\n\nJoseph Abdelmalek\n\n\n\n\n\n\n\n\n\n\n\n\nMy Personal E155 Goals\n\n\n\n\n\nLet me tell you about I hope to gain from this course!\n\n\n\n\n\nAug 30, 2024\n\n\nJoseph Abdelmalek\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "E155 Portfolio",
    "section": "",
    "text": "Hello! My name is Joseph Abdelmalek. I am a Junior at Harvey Mudd College studying Engineering, with a focus in Biomedical Engineering. My academic career has led me to many useful and interesting classes like Continuum Mechanics, Experimental Engineering and now MicroPs! I am also a research student in Prof. Santana’s CuTE Lab, where I help parametrize and test a 3D bioprinter. Outside of classes, I enjoy playing club volleyball for the Claremont Colleges team and teaching Coptic hymns classes and Sunday School at my home church in Irvine."
  },
  {
    "objectID": "labs/lab2/lab2.html",
    "href": "labs/lab2/lab2.html",
    "title": "E155 Lab 2: Multiplexing 7-Segment Display",
    "section": "",
    "text": "Lab Overview\nIn this lab, the goal was to use the seven-segment display module from Lab 1 to power a dual seven-segment display. However, instead of running two separate modules and taking up double the space, the goal for this lab was to practice time-multiplexing, a technique used to share a hardware resources for different purposes. In addition to this, we also needed to set up LEDs to take the sum of the two digits that were given as inputs. This display would be able to sum the two hexadecimal digits at all times (regardless of multiplexing) and display the binary sum on 5 LEDs. The instructions for this lab can be found on the HMC E155 Website under Lab 2\n\n\nDiscovering Multiplexing\nThe first step in completing this lab was understanding and mapping out how to multiplex our signal. This was done by creating an input and output table for the multiplex module and then creating a state transition diagram. This diagram (shown below) indicates that in states 1 and two, we wait for a counter variable C before switching. When the counter has reached a certain limit, it will indicate a change in state and then reset to 0 and start over again. This counter is what we will use to determine the multiplex speed, making sure that it is fast enough to seem like two simultaneous signals to the naked eye but slow enough to prevent the values of the digits from bleeding through to the other digit.\n\n Figure 1: State transition diagram for the multiplexing module.\n\nNow that this was mapped out, I moved into designing my top module and identifying the modules I needed inside it. Drawing it out below, I used 4 modules within my top module: an HSOSC module (which is done within the top module and instantiates the clock), an LED sum module, the multiplex module from above, and my original (and unchanged) seven-segment display module from Lab 1.\n\n Figure 2: State transition diagram for the multiplexing module.\n\n\n\n\nInputs\nOutputs\n\n\n\n\nclk, reset\nd1, d2\n\n\n[3:0] n1, n2\n[4:0] sum\n\n\n\n[6:0] seg\n\n\n\nFrom here, I was able to write my SystemVerilog in Radiant. See that code here.\n\n\nQuesta/ModelSim Testing\nGiven this, I was able to write up my top and submodules and test them in Questa/ModelSim using testbenches. Multiple test benches were written so as to be able to test each module individually and the top module as well. The top module was able to tell the most in one image, shown below.\n\n Figure 3: State transition diagram for the multiplexing module.\n\nFrom the image, we see that our LED sum module works correctly and we also see that when the digit indicator is low at d1, the illuminated digit is the first digit (n1). We see this when n1 is “7” and our segment outputs “1111000” which is low (indicating the light is on) for segments A, B, and C.\n\n\nCircuit Design and Calculations\nAfter confirming that the FPGA works as intended in simulation, I then had to set up the hardware. Below is an image with the FPGA pins and display pins, along with locations of resistors labeled R_0, R_1, and R_3.\n\n Figure 4: Schematic showing pin numbers and mapping of the FPGA-to-display/LED communication.\n\nTo calculate the resistor values for the FPGA connections to the seven-segments on the display, I made sure the current was less or equal to the maximum allowable current dictated by the FPGA datasheet given the voltage drop dictated by the display datasheet. From there I was able to calculate:\n\n Figure 6: Calculations for the dual seven-segment display cathode resistors.\n\nFor the transistors, given the voltage drop indicated in the datasheet, I was able to calculate:\n\n Figure 7: Calculations for the transistor connection resistors.\n\nFor the LEDs that displayed the sum, I used an LTA-1000hr display and from the datasheet, I was able to calculate:\n\n Figure 7: Calculations for the LEDs that display the sum’s resistors.\n\n\n\nLights!\nWith the hardware designed, I implemented my plans, completed the circuit, and programmed my FPGA. I was able to display these successful outputs:\n\n Figure 8: Image of the dual seven-segment display showing the proper multiplexed outputs 4 and 3. The sum is also correct (00111)\n\n\n Figure 9: Image of the dual seven-segment display showing the proper multiplexed outputs d and 7. The sum is also correct (10100).\n\n\n\nSummary\nIn sum, I was able to create a working dual seven-segment display and I was also able sum the outputs on LEDs. Most of the time I spent on this lab was getting the seven-segment display pins right. A large part of this lab needed organization and mapping so as to help make debugging quicker and easier. Going forward, drawing out the pin locations, state transition diagrams, etc. will prove to help me move along and figure the labs out much quicker. In total, this lab took me about 12 hours."
  },
  {
    "objectID": "labs/lab4/lab4.html",
    "href": "labs/lab4/lab4.html",
    "title": "E155 Lab 4",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab4/lab4.html#digital-audio",
    "href": "labs/lab4/lab4.html#digital-audio",
    "title": "E155 Lab 4",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab6/lab6.html",
    "href": "labs/lab6/lab6.html",
    "title": "E155 Lab 6",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "labs/lab6/lab6.html#the-internet-of-things-and-serial-peripheral-interface",
    "href": "labs/lab6/lab6.html#the-internet-of-things-and-serial-peripheral-interface",
    "title": "E155 Lab 6",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "posts/first-post.html",
    "href": "posts/first-post.html",
    "title": "Hello Quarto",
    "section": "",
    "text": "Check out all the cool places on this Quarto portfolio, like my other blog posts or my labs, by using the Navibar at the top of the screen!"
  },
  {
    "objectID": "posts/lab1-blog.html",
    "href": "posts/lab1-blog.html",
    "title": "Lab 1 Reflection",
    "section": "",
    "text": "The goal of E155 Lab 1 was to set up and test our provided MCU and FPGA. In addition to setting them up, we were tasked with using them to create a 7-segment display that could display a single hexadecimal digit. For this lab, I was able to complete the setup and test for the MCU and FPGA, however I was unable to complete the display as I ran out of time during the week.\nMost of the time I spent on this lab was debugging and setup. For me, this took longer than average because in my mind, the physical aspect of the project had no need for debugging, and I focused fully on trying to debug the software. When running the provided demos for the FPGA and MCU, I looked for errors in my downloaded drivers/packages or my code files. However, my problem during this lab came from a few poorly-soldered pins on the development board. Because of this, I learned that the best way to attack a problem when you have no direction is to start at the beginning and never assume you know where to go. Although I was unable to get to the 7-segment display, I was still able to learn a valuable skill that will help me in the future labs and projects.\nLooking ahead at the final task for this lab that I have yet to complete, I feel confident that I can attack it and solve it. During lectures, we spent time reviewing key concepts such as combinational and sequential logic and how to approach problems that require us to create modules for FPGAs. We also looked at ways not to write Verilog, which will help me avoid errors and extended debugging."
  }
]